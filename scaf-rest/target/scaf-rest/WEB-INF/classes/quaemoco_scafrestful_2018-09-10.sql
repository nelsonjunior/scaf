
DROP TABLE IF EXISTS AGENDAMENTO;
DROP TABLE IF EXISTS CARTAO_CREDITO; 
DROP TABLE IF EXISTS CATEGORIA;
DROP TABLE IF EXISTS CONTATO;
DROP TABLE IF EXISTS LANCAMENTO;
DROP TABLE IF EXISTS LANCAMENTO_PARCELA;
DROP TABLE IF EXISTS MENU;
DROP TABLE IF EXISTS MENU_PERFIL;
DROP TABLE IF EXISTS PARCELA;
DROP TABLE IF EXISTS PERFIL;
DROP TABLE IF EXISTS PERIODO;
DROP TABLE IF EXISTS SERVICO;
DROP TABLE IF EXISTS TAG;
DROP TABLE IF EXISTS TAG_AGENDAMENTO;
DROP TABLE IF EXISTS TAG_LANCAMENTO;
DROP TABLE IF EXISTS USUARIO;

CREATE TABLE AGENDAMENTO (
  COD_AGENDAMENTO bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador do agendamento.',
  COD_USUARIO bigint(11) NOT NULL COMMENT 'Identificador do Usuário.',
  COD_CATEGORIA bigint(11) NOT NULL COMMENT 'Identificador da categoria.',
  NUM_PERIODO int(11) DEFAULT NULL COMMENT 'Define a periodicidade do agendamento.',
  NOM_AGENDAMENTO varchar(100) NOT NULL COMMENT 'Nome do agendamento.',
  DES_AGENDAMENTO text NOT NULL COMMENT 'Descrição do agendamento.',
  DAT_CADASTRO date NOT NULL COMMENT 'Define a data de cadastro.',
  DAT_INICIO date NOT NULL COMMENT 'Define a data de início do agendamento.',
  IND_STATUS tinyint(1) DEFAULT '1' COMMENT 'Indica a situação do agendamento.',
  PRIMARY KEY (COD_AGENDAMENTO),
  KEY COD_USUARIO (COD_USUARIO),
  KEY COD_CATEGORIA (COD_CATEGORIA),
  KEY NUM_PERIODO (NUM_PERIODO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;
  
CREATE TABLE CARTAO_CREDITO (
  COD_CARTAO_CREDITO bigint(11) NOT NULL AUTO_INCREMENT,
  COD_USUARIO bigint(11) NOT NULL,
  NOM_BANDEIRA varchar(20) NOT NULL,
  NOM_CARTAO_CREDITO varchar(100) NOT NULL,
  NUM_CARTAO varchar(30) NOT NULL DEFAULT '',
  DAT_CADASTRO date NOT NULL,
  IND_STATUS tinyint(1) DEFAULT NULL,
  NUM_DIA_FECHAMENTO int(2) NOT NULL DEFAULT '28',
  NUM_DIA_VENCIMENTO int(2) NOT NULL DEFAULT '10',
  PRIMARY KEY (COD_CARTAO_CREDITO),
  KEY COD_USUARIO (COD_USUARIO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE CATEGORIA (
  COD_CATEGORIA bigint(11) NOT NULL,
  COD_CATEGORIA_PAI bigint(11) DEFAULT NULL,
  NOM_CATEGORIA varchar(300) DEFAULT NULL,
  PRIMARY KEY (COD_CATEGORIA),
  KEY COD_CATEGORIA_PAI (COD_CATEGORIA_PAI)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE CONTATO (
  COD_CONTATO bigint(11) NOT NULL AUTO_INCREMENT,
  NOM_CONTATO varchar(150) DEFAULT '',
  DES_ASSUNTO varchar(100) DEFAULT '',
  DES_EMAIL varchar(100) DEFAULT '',
  DES_COMENTARIO text,
  DAT_CADASTRO timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (COD_CONTATO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;
 
CREATE TABLE LANCAMENTO (
  COD_LANCAMENTO bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador do LANCAMENTO.',
  COD_USUARIO bigint(11) NOT NULL COMMENT 'Identificador do usuário.',
  COD_CATEGORIA bigint(11) NOT NULL COMMENT 'Identificador da categoria.',
  COD_AGENDAMENTO bigint(11) DEFAULT NULL COMMENT 'Identificador do agendamento.',
  COD_PARCELA bigint(11) DEFAULT NULL COMMENT 'Identificador da parcela.',
  COD_CARTAO_CREDITO bigint(11) DEFAULT NULL,
  DAT_LANCAMENTO timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Define a data/hora do LANCAMENTO.',
  DAT_REFERENCIA date NOT NULL COMMENT 'Define a data de referência do LANCAMENTO.',
  DAT_FATURA date DEFAULT NULL,
  VAL_LANCAMENTO double(10,2) NOT NULL COMMENT 'Define o valor do LANCAMENTO.',
  VAL_PREVISTO double(10,2) DEFAULT '0.00' COMMENT 'Define o valor previsto do LANCAMENTO.',
  URL_ANEXO varchar(50) DEFAULT NULL,
  NUM_BOLETO varchar(50) DEFAULT NULL,
  DES_LANCAMENTO text COMMENT 'Define a descrição do LANCAMENTO.',
  PRIMARY KEY (COD_LANCAMENTO),
  KEY COD_USUARIO (COD_USUARIO),
  KEY COD_CATEGORIA (COD_CATEGORIA),
  KEY COD_AGENDAMENTO (COD_AGENDAMENTO),
  KEY COD_PARCELA (COD_PARCELA),
  KEY COD_CARTAO_CREDITO (COD_CARTAO_CREDITO),
  KEY COD_PARCELA_2 (COD_PARCELA)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;
 
CREATE TABLE LANCAMENTO_PARCELA (
  COD_LANCAMENTO bigint(11) NOT NULL,
  COD_PARCELA bigint(11) NOT NULL,
  PRIMARY KEY (COD_LANCAMENTO,COD_PARCELA),
  KEY COD_LANCAMENTO (COD_LANCAMENTO),
  KEY COD_PARCELA (COD_PARCELA)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;
 
CREATE TABLE MENU (
  COD_MENU bigint(11) NOT NULL,
  COD_MENU_PAI bigint(11) DEFAULT NULL,
  NUM_ORDEM int(11) DEFAULT '0',
  NOM_MENU varchar(300) NOT NULL,
  URL_PAGINA varchar(100) DEFAULT NULL,
  ICO_MENU varchar(50) DEFAULT '',
  PRIMARY KEY (COD_MENU),
  KEY COD_MENU_PAI (COD_MENU_PAI)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;
 
CREATE TABLE MENU_PERFIL (
  COD_MENU bigint(11) NOT NULL,
  COD_PERFIL bigint(11) NOT NULL,
  PRIMARY KEY (COD_MENU,COD_PERFIL),
  KEY COD_MENU (COD_MENU),
  KEY COD_PERFIL (COD_PERFIL)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE PARCELA (
  COD_PARCELA bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador da parcela.',
  COD_LANCAMENTO bigint(11) NOT NULL COMMENT 'Identificador do Parcelamento.',
  DAT_REFERENCIA date NOT NULL COMMENT 'Define a data prevista da Parcela',
  VAL_PARCELA double(10,2) NOT NULL COMMENT 'Define o valor da parcela.',
  NUM_PARCELA int(11) NOT NULL COMMENT 'Define o número da parcela.',
  PRIMARY KEY (COD_PARCELA),
  KEY COD_PARCELAMENTO (COD_LANCAMENTO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE PERFIL (
  COD_PERFIL bigint(11) NOT NULL AUTO_INCREMENT,
  NOM_PERFIL varchar(100) NOT NULL,
  PRIMARY KEY (COD_PERFIL)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE PERIODO (
  NUM_PERIODO int(11) NOT NULL,
  NOM_PERIODO varchar(100) NOT NULL,
  PRIMARY KEY (NUM_PERIODO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE SERVICO (
  COD_SERVICO int(11) NOT NULL,
  COD_SERVICO_PAI int(11) DEFAULT NULL,
  NOM_SERVICO varchar(50) NOT NULL,
  URL_PATH varchar(50) NOT NULL,
  IND_STATUS tinyint(1) NOT NULL,
  PRIMARY KEY (COD_SERVICO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;
 
CREATE TABLE TAG (
  COD_TAG bigint(11) NOT NULL AUTO_INCREMENT,
  COD_USUARIO bigint(11) NOT NULL COMMENT 'Identificador do Usuário.',
  NOM_TAG varchar(150) NOT NULL,
  DES_TAG text,
  DAT_CADASTRO timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (COD_TAG),
  KEY COD_USUARIO (COD_USUARIO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE TAG_AGENDAMENTO (
  COD_TAG bigint(11) NOT NULL,
  COD_AGENDAMENTO bigint(11) NOT NULL,
  PRIMARY KEY (COD_TAG,COD_AGENDAMENTO),
  KEY COD_TAG (COD_TAG),
  KEY COD_AGENDAMENTO (COD_AGENDAMENTO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE TAG_LANCAMENTO (
  COD_TAG bigint(11) NOT NULL,
  COD_LANCAMENTO bigint(11) NOT NULL,
  PRIMARY KEY (COD_TAG,COD_LANCAMENTO),
  KEY COD_TAG (COD_TAG),
  KEY COD_LANCAMENTO (COD_LANCAMENTO)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;

CREATE TABLE USUARIO (
  COD_USUARIO bigint(11) NOT NULL AUTO_INCREMENT,
  IND_STATUS tinyint(1) DEFAULT NULL,
  DES_EMAIL varchar(255) DEFAULT NULL,
  NOM_LOGIN varchar(255) DEFAULT NULL,
  NOM_USUARIO varchar(255) DEFAULT NULL,
  DES_SENHA varchar(255) DEFAULT NULL,
  COD_PERFIL bigint(11) DEFAULT NULL,
  DAT_CADASTRO timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (COD_USUARIO),
  KEY USUARIO_FK1 (COD_PERFIL)
) ENGINE=InnoDB DEFAULT CHARSET=latin2;


































alter TABLE AGENDAMENTO add  CONSTRAINT FK_AGENDAMENTO_USUARIO FOREIGN KEY (COD_USUARIO) REFERENCES USUARIO (COD_USUARIO);
alter TABLE AGENDAMENTO add  CONSTRAINT FK_AGENDAMENTO_PERIODO FOREIGN KEY (NUM_PERIODO) REFERENCES PERIODO (NUM_PERIODO);
alter TABLE AGENDAMENTO add  CONSTRAINT FK_AGENDAMENTO_CATEGORIA FOREIGN KEY (COD_CATEGORIA) REFERENCES CATEGORIA (COD_CATEGORIA);



 alter TABLE CARTAO_CREDITO add CONSTRAINT FK_CARTAO_CREDITO_ FOREIGN KEY (COD_USUARIO) REFERENCES USUARIO (COD_USUARIO);
 alter TABLE CATEGORIA add CONSTRAINT FK_CATEGORIA_CATEGORIA FOREIGN KEY (COD_CATEGORIA_PAI) REFERENCES CATEGORIA (COD_CATEGORIA);
 
 
 alter TABLE LANCAMENTO add   CONSTRAINT FK_LANCAMENTO_USUARIO FOREIGN KEY (COD_USUARIO) REFERENCES USUARIO (COD_USUARIO);
  alter TABLE LANCAMENTO add  CONSTRAINT FK_LANCAMENTO_CATEGORIA FOREIGN KEY (COD_CATEGORIA) REFERENCES CATEGORIA (COD_CATEGORIA);
  alter TABLE LANCAMENTO add  CONSTRAINT FK_LANCAMENTO_AGENDAMENTO FOREIGN KEY (COD_AGENDAMENTO) REFERENCES AGENDAMENTO (COD_AGENDAMENTO);
  alter TABLE LANCAMENTO add  CONSTRAINT FK_LANCAMENTO_CARTAO_CREDITO FOREIGN KEY (COD_CARTAO_CREDITO) REFERENCES CARTAO_CREDITO (COD_CARTAO_CREDITO);
  alter TABLE LANCAMENTO add  CONSTRAINT FK_LANCAMENTO_CARTAO_PARCELA FOREIGN KEY (COD_PARCELA) REFERENCES PARCELA (COD_PARCELA);



  alter TABLE LANCAMENTO_PARCELA add CONSTRAINT FK_LANCAMENTO_PARCELA_LANCAMENTO FOREIGN KEY (COD_LANCAMENTO) REFERENCES LANCAMENTO (COD_LANCAMENTO);
  alter TABLE LANCAMENTO_PARCELA add CONSTRAINT FK_LANCAMENTO_PARCELA_PARCELA FOREIGN KEY (COD_PARCELA) REFERENCES PARCELA (COD_PARCELA);

 alter TABLE MENU_PERFIL add CONSTRAINT FK_MENU_PERFIL_MENU FOREIGN KEY (COD_MENU) REFERENCES MENU (COD_MENU);
 alter TABLE MENU_PERFIL add CONSTRAINT FK_MENU_PERFIL_PERFIL FOREIGN KEY (COD_PERFIL) REFERENCES PERFIL (COD_PERFIL);


 alter TABLE PARCELA add CONSTRAINT FK_PARCELA_LANCAMENTO FOREIGN KEY (COD_LANCAMENTO) REFERENCES LANCAMENTO (COD_LANCAMENTO);

  alter TABLE TAG add CONSTRAINT FK_TAG_USUARIO FOREIGN KEY (COD_USUARIO) REFERENCES USUARIO (COD_USUARIO);

 alter TABLE TAG_AGENDAMENTO add CONSTRAINT FK_TAG_AGENDAMENTO_TAG FOREIGN KEY (COD_TAG) REFERENCES TAG (COD_TAG);
 alter TABLE TAG_AGENDAMENTO add CONSTRAINT FK_TAG_AGENDAMENTO_AGENDAMENTO FOREIGN KEY (COD_AGENDAMENTO) REFERENCES AGENDAMENTO (COD_AGENDAMENTO);

 alter TABLE TAG_LANCAMENTO add CONSTRAINT FK_TAG_LANCAMENTO_TAG FOREIGN KEY (COD_TAG) REFERENCES TAG (COD_TAG);
 alter TABLE TAG_LANCAMENTO add CONSTRAINT FK_TAG_LANCAMENTO_LANCAMENTO FOREIGN KEY (COD_LANCAMENTO) REFERENCES LANCAMENTO (COD_LANCAMENTO);


alter TABLE USUARIO add CONSTRAINT FK_USUARIO_PERFIL FOREIGN KEY (COD_PERFIL) REFERENCES PERFIL (COD_PERFIL);





























# Dump da tabela VW_AGENDA_ATUAL
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_AGENDA_ATUAL;

CREATE TABLE VW_AGENDA_ATUAL (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DAT_PREVISTA DATE NULL DEFAULT NULL,
   COD_AGENDAMENTO BIGINT(20) NULL DEFAULT NULL,
   COD_PARCELA BIGINT(20) NULL DEFAULT NULL,
   COD_CARTAO_CREDITO BIGINT(20) NULL DEFAULT NULL,
   COD_CATEGORIA BIGINT(20) NOT NULL DEFAULT '0',
   DES_CATEGORIA VARCHAR(403) NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE NULL DEFAULT NULL,
   DAT_PAGAMENTO DATE NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_AGENDAMENTOS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_AGENDAMENTOS;

CREATE TABLE VW_AGENDAMENTOS (
   COD_USUARIO BIGINT(11) NOT NULL,
   DAT_PREVISTA DATE NULL DEFAULT NULL,
   COD_AGENDAMENTO BIGINT(11) NOT NULL DEFAULT '0',
   NOM_AGENDAMENTO VARCHAR(100) NOT NULL,
   COD_CATEGORIA BIGINT(11) NOT NULL,
   DES_CATEGORIA VARCHAR(403) NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE(19) NULL DEFAULT NULL,
   NOM_PERIODO VARCHAR(100) NOT NULL,
   DAT_PAGAMENTO DATE NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL,
   DIAS BIGINT(21) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_AGENDAMENTOS_MESES
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_AGENDAMENTOS_MESES;

CREATE TABLE VW_AGENDAMENTOS_MESES (
   COD_USUARIO BIGINT(11) NOT NULL,
   DAT_PREVISTA DATE NULL DEFAULT NULL,
   COD_AGENDAMENTO BIGINT(11) NOT NULL DEFAULT '0',
   NOM_AGENDAMENTO VARCHAR(100) NOT NULL,
   COD_CATEGORIA BIGINT(20) NOT NULL DEFAULT '0',
   DES_CATEGORIA VARCHAR(314) NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE(19) NULL DEFAULT NULL,
   NOM_PERIODO VARCHAR(100) NOT NULL,
   DAT_PAGAMENTO DATE NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL,
   DIAS BIGINT(21) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_DESPESAS_RECEITAS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_DESPESAS_RECEITAS;

CREATE TABLE VW_DESPESAS_RECEITAS (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DAT_COMPETENCIA DATE NULL DEFAULT NULL,
   VAL_DESPESA_PREVISTA DOUBLE NULL DEFAULT NULL,
   VAL_DESPESA_PAGA DOUBLE NULL DEFAULT NULL,
   VAL_RECEITA_PREVISTA DOUBLE NULL DEFAULT NULL,
   VAL_RECEITA_PAGA DOUBLE NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_FATURAS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_FATURAS;

CREATE TABLE VW_FATURAS (
   COD_USUARIO BIGINT(11) NOT NULL,
   COD_CARTAO_CREDITO BIGINT(11) NULL DEFAULT NULL,
   NOM_BANDEIRA VARCHAR(20) NOT NULL,
   NUM_CARTAO VARCHAR(30) NOT NULL DEFAULT '',
   DAT_FATURA DATE NULL DEFAULT NULL,
   DAT_REFERENCIA DATE NOT NULL,
   VAL_PREVISTO DOUBLE(10) NULL DEFAULT '0.00',
   VAL_LANCAMENTO DOUBLE(10) NOT NULL,
   QTD_PARCELAS BIGINT(21) NOT NULL DEFAULT '0',
   VAL_PARCELAS DOUBLE(19) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_FATURAS_DATAS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_FATURAS_DATAS;

CREATE TABLE VW_FATURAS_DATAS (
   COD_CARTAO_CREDITO BIGINT(20) NOT NULL DEFAULT '0',
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DAT_FATURA DATE NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_FATURAS_PREVISTAS_REALIZADAS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_FATURAS_PREVISTAS_REALIZADAS;

CREATE TABLE VW_FATURAS_PREVISTAS_REALIZADAS (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   COD_CARTAO_CREDITO BIGINT(20) NOT NULL DEFAULT '0',
   NOM_BANDEIRA VARCHAR(20) NOT NULL,
   NUM_CARTAO VARCHAR(30) NOT NULL DEFAULT '',
   DAT_FATURA DATE NULL DEFAULT NULL,
   DAT_REFERENCIA DATE NULL DEFAULT NULL,
   VAL_LANCAMENTO DOUBLE(10) NULL DEFAULT NULL,
   VAL_PARCELAS_PENDENTES DOUBLE(19) NULL DEFAULT NULL,
   QTD_PARCELAS_PENDENTES BIGINT(21) NOT NULL DEFAULT '0'
) ENGINE=MyISAM;



# Dump da tabela VW_LANCAMENTOS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_LANCAMENTOS;

CREATE TABLE VW_LANCAMENTOS (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DES_LANCAMENTOS VARCHAR(15) NOT NULL DEFAULT '',
   COD_TIPO BIGINT(20) NOT NULL DEFAULT '0',
   VAL_PREVISTO DOUBLE(19) NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(19) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_MEDIA_AGENDAMENTOS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_MEDIA_AGENDAMENTOS;

CREATE TABLE VW_MEDIA_AGENDAMENTOS (
   COD_AGENDAMENTO BIGINT(11) NULL DEFAULT NULL,
   NUM_QTD BIGINT(21) NOT NULL DEFAULT '0',
   VAL_TOTAL DOUBLE(19) NULL DEFAULT NULL,
   VAL_MEDIA DOUBLE(19) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_MEDIA_CATEGORIA
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_MEDIA_CATEGORIA;

CREATE TABLE VW_MEDIA_CATEGORIA (
   COD_USUARIO BIGINT(11) NOT NULL,
   COD_CATEGORIA BIGINT(11) NOT NULL,
   NOM_CATEGORIA VARCHAR(300) NULL DEFAULT NULL,
   NUM_QTD BIGINT(21) NOT NULL DEFAULT '0',
   VAL_TOTAL DOUBLE(19) NULL DEFAULT NULL,
   VAL_MEDIA DOUBLE(19) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_MEDIA_CATEGORIA_MESES
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_MEDIA_CATEGORIA_MESES;

CREATE TABLE VW_MEDIA_CATEGORIA_MESES (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DAT_COMPETENCIA DATE NULL DEFAULT NULL,
   COD_CATEGORIA BIGINT(20) NOT NULL DEFAULT '0',
   NOM_CATEGORIA VARCHAR(300) NULL DEFAULT NULL,
   NUM_QTD BIGINT(21) NOT NULL DEFAULT '0',
   VAL_TOTAL DOUBLE(19) NULL DEFAULT NULL,
   VAL_MEDIA DOUBLE(19) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_PARCELAS
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_PARCELAS;

CREATE TABLE VW_PARCELAS (
   COD_USUARIO BIGINT(11) NOT NULL,
   DAT_PREVISTA DATE NOT NULL,
   COD_PARCELA BIGINT(11) NOT NULL DEFAULT '0',
   DES_LANCAMENTO TEXT NULL DEFAULT NULL,
   COD_CATEGORIA INT(2) NOT NULL DEFAULT '0',
   DES_CATEGORIA VARCHAR(324) NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE(10) NOT NULL,
   DAT_PAGAMENTO DATE NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL,
   DIAS BIGINT(21) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_PARCELAS_MESES
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_PARCELAS_MESES;

CREATE TABLE VW_PARCELAS_MESES (
   COD_USUARIO BIGINT(11) NOT NULL,
   DAT_PREVISTA DATE NOT NULL,
   COD_PARCELA BIGINT(11) NOT NULL DEFAULT '0',
   DES_LANCAMENTO TEXT NULL DEFAULT NULL,
   COD_CATEGORIA INT(2) NOT NULL DEFAULT '0',
   DES_CATEGORIA VARCHAR(324) NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE(10) NOT NULL,
   DAT_PAGAMENTO DATE NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL,
   DIAS BIGINT(21) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_PARCELAS_SEM_FATURA
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_PARCELAS_SEM_FATURA;

CREATE TABLE VW_PARCELAS_SEM_FATURA (
   COD_USUARIO BIGINT(11) NOT NULL,
   COD_CARTAO_CREDITO BIGINT(11) NULL DEFAULT NULL,
   COD_PARCELA BIGINT(11) NOT NULL DEFAULT '0',
   NOM_BANDEIRA VARCHAR(20) NOT NULL,
   NUM_CARTAO VARCHAR(30) NOT NULL DEFAULT '',
   NOM_CATEGORIA VARCHAR(300) NULL DEFAULT NULL,
   DAT_REFERENCIA DATE NOT NULL,
   VAL_PARCELA DOUBLE(10) NOT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_PROXIMAS_ATIVIDADES
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_PROXIMAS_ATIVIDADES;

CREATE TABLE VW_PROXIMAS_ATIVIDADES (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DAT_PREVISTA DATE NULL DEFAULT NULL,
   COD_AGENDAMENTO BIGINT(20) NULL DEFAULT NULL,
   COD_PARCELA BIGINT(20) NULL DEFAULT NULL,
   COD_CARTAO_CREDITO BIGINT(20) NULL DEFAULT NULL,
   NOME TEXT NULL DEFAULT NULL,
   COD_CATEGORIA BIGINT(20) NOT NULL DEFAULT '0',
   DES_CATEGORIA VARCHAR(403) NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE NULL DEFAULT NULL,
   DAT_PAGAMENTO DATE NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL,
   DIAS BIGINT(21) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_RELACAO_LANCAMENTO
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_RELACAO_LANCAMENTO;

CREATE TABLE VW_RELACAO_LANCAMENTO (
   COD_USUARIO BIGINT(11) NOT NULL,
   COD_LANCAMENTO BIGINT(11) NOT NULL DEFAULT '0',
   COD_LANCAMENTO_PARCELA BIGINT(11) NULL DEFAULT NULL,
   COD_TIPO INT(0) NOT NULL DEFAULT '0',
   NUM_COMPETENCIA VARCHAR(6) NULL DEFAULT NULL,
   DES_CATEGORIA VARCHAR(330) NULL DEFAULT NULL,
   NUM_PARCELA INT(11) NULL DEFAULT NULL,
   NOM_AGENDAMENTO VARCHAR(100) NULL DEFAULT NULL,
   DAT_LANCAMENTO VARCHAR(21) NULL DEFAULT NULL,
   DAT_REFERENCIA VARCHAR(10) NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE(10) NULL DEFAULT '0.00',
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_RELATORIO_DINAMICO
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_RELATORIO_DINAMICO;

CREATE TABLE VW_RELATORIO_DINAMICO (
   COD_USUARIO BIGINT(11) NOT NULL,
   COD_LANCAMENTO BIGINT(11) NOT NULL DEFAULT '0',
   COD_LANCAMENTO_PARCELA BIGINT(11) NULL DEFAULT NULL,
   COD_AGENDAMENTO BIGINT(11) NULL DEFAULT NULL,
   COD_TIPO INT(0) NOT NULL DEFAULT '0',
   COD_CATEGORIA BIGINT(20) NULL DEFAULT NULL,
   NOM_CATEGORIA VARCHAR(300) NULL DEFAULT NULL,
   COD_CATEGORIA_PAI BIGINT(11) NULL DEFAULT NULL,
   NOM_CATEGORIA_PAI VARCHAR(300) NULL DEFAULT NULL,
   NUM_PARCELA INT(11) NULL DEFAULT NULL,
   NOM_AGENDAMENTO VARCHAR(100) NULL DEFAULT NULL,
   DAT_LANCAMENTO TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
   DAT_REFERENCIA DATE NOT NULL,
   VAL_PREVISTO DOUBLE(10) NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NOT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_RESUMO_MES
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_RESUMO_MES;

CREATE TABLE VW_RESUMO_MES (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DES_LANCAMENTOS VARCHAR(15) NOT NULL DEFAULT '',
   COD_TIPO BIGINT(20) NOT NULL DEFAULT '0',
   VAL_PREVISTO DOUBLE(19) NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(19) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_RESUMO_MESES
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_RESUMO_MESES;

CREATE TABLE VW_RESUMO_MESES (
   COD_USUARIO BIGINT(20) NOT NULL DEFAULT '0',
   DES_LANCAMENTOS VARCHAR(15) NOT NULL DEFAULT '',
   COD_TIPO BIGINT(20) NOT NULL DEFAULT '0',
   DAT_COMPETENCIA DATE NULL DEFAULT NULL,
   VAL_PREVISTO DOUBLE(19) NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(19) NULL DEFAULT NULL
) ENGINE=MyISAM;



# Dump da tabela VW_ULTIMAS_ATIVIDADES
# ------------------------------------------------------------

DROP VIEW IF EXISTS VW_ULTIMAS_ATIVIDADES;

CREATE TABLE VW_ULTIMAS_ATIVIDADES (
   COD_USUARIO BIGINT(11) NOT NULL,
   NUM_COMPETENCIA VARCHAR(6) NULL DEFAULT NULL,
   DES_CATEGORIA VARCHAR(403) NULL DEFAULT NULL,
   VAL_PAGO DOUBLE(10) NULL DEFAULT NULL,
   DAT_LANCAMENTO TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
   NUM_DIAS BIGINT(21) NULL DEFAULT NULL,
   NUM_HORAS BIGINT(21) NULL DEFAULT NULL,
   NUM_MINUTOS BIGINT(21) NULL DEFAULT NULL
) ENGINE=MyISAM;





# Replace placeholder table for VW_MEDIA_CATEGORIA_MESES with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_MEDIA_CATEGORIA_MESES;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_MEDIA_CATEGORIA_MESES
AS SELECT
   L.COD_USUARIO AS COD_USUARIO,cast(date_format((curdate() + interval -(3) month),'%Y-%m-01') as date) AS DAT_COMPETENCIA,
   C.COD_CATEGORIA AS COD_CATEGORIA,
   C.NOM_CATEGORIA AS NOM_CATEGORIA,count(L.COD_LANCAMENTO) AS NUM_QTD,sum(L.VAL_LANCAMENTO) AS VAL_TOTAL,round((sum(L.VAL_LANCAMENTO) / count(L.COD_LANCAMENTO)),2) AS VAL_MEDIA
FROM (LANCAMENTO L join CATEGORIA C) where ((C.COD_CATEGORIA = L.COD_CATEGORIA) and (L.DAT_LANCAMENTO between cast(date_format((curdate() + interval -(5) month),'%Y-%m-01') as date) and cast(date_format((curdate() + interval -(3) month),'%Y-%m-01') as date))) group by L.COD_USUARIO,C.COD_CATEGORIA,C.NOM_CATEGORIA union all select L.COD_USUARIO AS COD_USUARIO,cast(date_format((curdate() + interval -(2) month),'%Y-%m-01') as date) AS DAT_COMPETENCIA,C.COD_CATEGORIA AS COD_CATEGORIA,C.NOM_CATEGORIA AS NOM_CATEGORIA,count(L.COD_LANCAMENTO) AS NUM_QTD,sum(L.VAL_LANCAMENTO) AS VAL_TOTAL,round((sum(L.VAL_LANCAMENTO) / count(L.COD_LANCAMENTO)),2) AS VAL_MEDIA from (LANCAMENTO L join CATEGORIA C) where ((C.COD_CATEGORIA = L.COD_CATEGORIA) and (L.DAT_LANCAMENTO between cast(date_format((curdate() + interval -(4) month),'%Y-%m-01') as date) and cast(date_format((curdate() + interval -(2) month),'%Y-%m-01') as date))) group by L.COD_USUARIO,C.COD_CATEGORIA,C.NOM_CATEGORIA union all select L.COD_USUARIO AS COD_USUARIO,cast(date_format((curdate() + interval -(1) month),'%Y-%m-01') as date) AS DAT_COMPETENCIA,C.COD_CATEGORIA AS COD_CATEGORIA,C.NOM_CATEGORIA AS NOM_CATEGORIA,count(L.COD_LANCAMENTO) AS NUM_QTD,sum(L.VAL_LANCAMENTO) AS VAL_TOTAL,round((sum(L.VAL_LANCAMENTO) / count(L.COD_LANCAMENTO)),2) AS VAL_MEDIA from (LANCAMENTO L join CATEGORIA C) where ((C.COD_CATEGORIA = L.COD_CATEGORIA) and (L.DAT_LANCAMENTO between cast(date_format((curdate() + interval -(4) month),'%Y-%m-01') as date) and cast(date_format((curdate() + interval -(1) month),'%Y-%m-01') as date))) group by L.COD_USUARIO,C.COD_CATEGORIA,C.NOM_CATEGORIA;


# Replace placeholder table for VW_PARCELAS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_PARCELAS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_PARCELAS
AS SELECT
   LPA.COD_USUARIO AS COD_USUARIO,
   P.DAT_REFERENCIA AS DAT_PREVISTA,
   P.COD_PARCELA AS COD_PARCELA,
   LPA.DES_LANCAMENTO AS DES_LANCAMENTO,63 AS COD_CATEGORIA,concat(concat(convert(concat(concat('Parcela N ',P.NUM_PARCELA),' (') using latin2),C.NOM_CATEGORIA),')') AS DES_CATEGORIA,
   P.VAL_PARCELA AS VAL_PREVISTO,
   LPG.DAT_REFERENCIA AS DAT_PAGAMENTO,
   LPG.VAL_LANCAMENTO AS VAL_PAGO,timestampdiff(DAY,now(),P.DAT_REFERENCIA) AS DIAS
FROM (((PARCELA P join LANCAMENTO LPA on((LPA.COD_LANCAMENTO = P.COD_LANCAMENTO))) join CATEGORIA C on((C.COD_CATEGORIA = LPA.COD_CATEGORIA))) left join LANCAMENTO LPG on((LPG.COD_PARCELA = P.COD_PARCELA))) where (((date_format(curdate(),'%Y%m') = date_format(P.DAT_REFERENCIA,'%Y%m')) or ((P.DAT_REFERENCIA < concat(convert(date_format(curdate(),'%Y-%m') using utf8),'-01')) and isnull(LPG.DAT_REFERENCIA))) and isnull(LPA.COD_CARTAO_CREDITO));


# Replace placeholder table for VW_RESUMO_MES with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_RESUMO_MES;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_RESUMO_MES
AS SELECT
   VW_LANCAMENTOS.COD_USUARIO AS COD_USUARIO,
   VW_LANCAMENTOS.DES_LANCAMENTOS AS DES_LANCAMENTOS,
   VW_LANCAMENTOS.COD_TIPO AS COD_TIPO,(case when isnull(VW_LANCAMENTOS.VAL_PREVISTO) then 0 else VW_LANCAMENTOS.VAL_PREVISTO end) AS VAL_PREVISTO,(case when isnull(VW_LANCAMENTOS.VAL_PAGO) then 0 else VW_LANCAMENTOS.VAL_PAGO end) AS VAL_PAGO
FROM VW_LANCAMENTOS;


# Replace placeholder table for VW_PROXIMAS_ATIVIDADES with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_PROXIMAS_ATIVIDADES;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_PROXIMAS_ATIVIDADES
AS SELECT
   VW_AGENDAMENTOS.COD_USUARIO AS COD_USUARIO,
   VW_AGENDAMENTOS.DAT_PREVISTA AS DAT_PREVISTA,
   VW_AGENDAMENTOS.COD_AGENDAMENTO AS COD_AGENDAMENTO,NULL AS COD_PARCELA,NULL AS COD_CARTAO_CREDITO,
   VW_AGENDAMENTOS.NOM_AGENDAMENTO AS NOME,
   VW_AGENDAMENTOS.COD_CATEGORIA AS COD_CATEGORIA,
   VW_AGENDAMENTOS.DES_CATEGORIA AS DES_CATEGORIA,
   VW_AGENDAMENTOS.VAL_PREVISTO AS VAL_PREVISTO,
   VW_AGENDAMENTOS.DAT_PAGAMENTO AS DAT_PAGAMENTO,
   VW_AGENDAMENTOS.VAL_PAGO AS VAL_PAGO,
   VW_AGENDAMENTOS.DIAS AS DIAS
FROM VW_AGENDAMENTOS where isnull(VW_AGENDAMENTOS.DAT_PAGAMENTO) union all select VW_PARCELAS.COD_USUARIO AS COD_USUARIO,VW_PARCELAS.DAT_PREVISTA AS DAT_PREVISTA,NULL AS COD_AGENDAMENTO,VW_PARCELAS.COD_PARCELA AS COD_PARCELA,NULL AS COD_CARTAO_CREDITO,VW_PARCELAS.DES_LANCAMENTO AS NOME,VW_PARCELAS.COD_CATEGORIA AS COD_CATEGORIA,VW_PARCELAS.DES_CATEGORIA AS DES_CATEGORIA,VW_PARCELAS.VAL_PREVISTO AS VAL_PREVISTO,VW_PARCELAS.DAT_PAGAMENTO AS DAT_PAGAMENTO,VW_PARCELAS.VAL_PAGO AS VAL_PAGO,VW_PARCELAS.DIAS AS DIAS from VW_PARCELAS where isnull(VW_PARCELAS.DAT_PAGAMENTO) union all select VW_FATURAS_PREVISTAS_REALIZADAS.COD_USUARIO AS COD_USUARIO,VW_FATURAS_PREVISTAS_REALIZADAS.DAT_FATURA AS DAT_PREVISTA,NULL AS COD_AGENDAMENTO,NULL AS COD_PARCELA,VW_FATURAS_PREVISTAS_REALIZADAS.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,concat(concat(VW_FATURAS_PREVISTAS_REALIZADAS.NOM_BANDEIRA,' - '),VW_FATURAS_PREVISTAS_REALIZADAS.NUM_CARTAO) AS NOME,C.COD_CATEGORIA AS COD_CATEGORIA,concat(C.NOM_CATEGORIA,concat('(',concat(concat(concat(VW_FATURAS_PREVISTAS_REALIZADAS.NOM_BANDEIRA,' - '),substr(VW_FATURAS_PREVISTAS_REALIZADAS.NUM_CARTAO,-(4))),')'))) AS DES_CATEGORIA,VW_FATURAS_PREVISTAS_REALIZADAS.VAL_PARCELAS_PENDENTES AS VAL_PREVISTO,VW_FATURAS_PREVISTAS_REALIZADAS.DAT_REFERENCIA AS DAT_PAGAMENTO,VW_FATURAS_PREVISTAS_REALIZADAS.VAL_LANCAMENTO AS VAL_PAGO,timestampdiff(DAY,now(),VW_FATURAS_PREVISTAS_REALIZADAS.DAT_FATURA) AS DIAS from (VW_FATURAS_PREVISTAS_REALIZADAS join CATEGORIA C) where (isnull(VW_FATURAS_PREVISTAS_REALIZADAS.DAT_REFERENCIA) and ((date_format(curdate(),'%Y%m') = date_format(VW_FATURAS_PREVISTAS_REALIZADAS.DAT_FATURA,'%Y%m')) or ((VW_FATURAS_PREVISTAS_REALIZADAS.DAT_FATURA < concat(convert(date_format(curdate(),'%Y-%m') using utf8),'-01')) and isnull(VW_FATURAS_PREVISTAS_REALIZADAS.DAT_REFERENCIA))) and (VW_FATURAS_PREVISTAS_REALIZADAS.QTD_PARCELAS_PENDENTES > 0) and (C.COD_CATEGORIA = 76)) order by DAT_PREVISTA,DES_CATEGORIA;


# Replace placeholder table for VW_AGENDAMENTOS_MESES with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_AGENDAMENTOS_MESES;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_AGENDAMENTOS_MESES
AS SELECT
   A.COD_USUARIO AS COD_USUARIO,(A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(VW.DAT_COMPETENCIA,'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month) AS DAT_PREVISTA,
   A.COD_AGENDAMENTO AS COD_AGENDAMENTO,
   A.NOM_AGENDAMENTO AS NOM_AGENDAMENTO,
   VW.COD_CATEGORIA AS COD_CATEGORIA,concat(concat('Agendamento (',VW.NOM_CATEGORIA),')') AS DES_CATEGORIA,
   VW.VAL_MEDIA AS VAL_PREVISTO,
   P.NOM_PERIODO AS NOM_PERIODO,
   L.DAT_REFERENCIA AS DAT_PAGAMENTO,
   L.VAL_LANCAMENTO AS VAL_PAGO,timestampdiff(DAY,now(),(A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(VW.DAT_COMPETENCIA,'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month)) AS DIAS
FROM (((AGENDAMENTO A join PERIODO P on((P.NUM_PERIODO = A.NUM_PERIODO))) join VW_MEDIA_CATEGORIA_MESES VW on(((VW.COD_CATEGORIA = A.COD_CATEGORIA) and (VW.COD_USUARIO = A.COD_USUARIO)))) left join LANCAMENTO L on(((L.COD_AGENDAMENTO = A.COD_AGENDAMENTO) and (date_format(L.DAT_REFERENCIA,'%Y%m') = date_format(VW.DAT_COMPETENCIA,'%Y%m')) and (L.COD_LANCAMENTO = (select max(L2.COD_LANCAMENTO) from LANCAMENTO L2 where ((L2.COD_AGENDAMENTO = A.COD_AGENDAMENTO) and (date_format(L2.DAT_REFERENCIA,'%Y%m') = date_format(VW.DAT_COMPETENCIA,'%Y%m')))))))) where ((A.IND_STATUS = 1) and (date_format((A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(VW.DAT_COMPETENCIA,'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month),'%Y%m') = date_format(VW.DAT_COMPETENCIA,'%Y%m'))) order by A.COD_AGENDAMENTO,(A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(VW.DAT_COMPETENCIA,'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month),concat(concat('Agendamento (',VW.NOM_CATEGORIA),')');


# Replace placeholder table for VW_RELACAO_LANCAMENTO with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_RELACAO_LANCAMENTO;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_RELACAO_LANCAMENTO
AS SELECT
   distinct l.COD_USUARIO AS COD_USUARIO,
   l.COD_LANCAMENTO AS COD_LANCAMENTO,
   p.COD_LANCAMENTO AS COD_LANCAMENTO_PARCELA,(case when (l.COD_AGENDAMENTO is not null) then 1 when (l.COD_PARCELA is not null) then 2 when (l.COD_CATEGORIA not in (50,51,67,68,69,70,71,72,76)) then 3 when (l.COD_CATEGORIA in (72,50,51,67,68,69,70,71)) then 4 when (l.COD_CATEGORIA = 76) then 5 else 3 end) AS COD_TIPO,date_format(l.DAT_LANCAMENTO,'%Y%m') AS NUM_COMPETENCIA,(case when (l.COD_PARCELA is not null) then cp.NOM_CATEGORIA when (l.COD_CARTAO_CREDITO is not null) then concat(c.NOM_CATEGORIA,concat(' (',concat(concat(concat(cc.NOM_BANDEIRA,' - '),substr(cc.NUM_CARTAO,-(4))),')'))) else c.NOM_CATEGORIA end) AS DES_CATEGORIA,
   p.NUM_PARCELA AS NUM_PARCELA,
   a.NOM_AGENDAMENTO AS NOM_AGENDAMENTO,date_format(l.DAT_LANCAMENTO,'%d/%m/%Y %H:%i') AS DAT_LANCAMENTO,date_format(l.DAT_REFERENCIA,'%d/%m/%Y') AS DAT_REFERENCIA,
   l.VAL_PREVISTO AS VAL_PREVISTO,(case when isnull(l.COD_CARTAO_CREDITO) then l.VAL_LANCAMENTO else l.VAL_PREVISTO end) AS VAL_PAGO
FROM ((((((LANCAMENTO l join CATEGORIA c on((c.COD_CATEGORIA = l.COD_CATEGORIA))) left join PARCELA p on((p.COD_PARCELA = l.COD_PARCELA))) left join LANCAMENTO lp on((lp.COD_LANCAMENTO = p.COD_LANCAMENTO))) left join CATEGORIA cp on((cp.COD_CATEGORIA = lp.COD_CATEGORIA))) left join AGENDAMENTO a on((a.COD_AGENDAMENTO = l.COD_AGENDAMENTO))) left join CARTAO_CREDITO cc on((cc.COD_CARTAO_CREDITO = l.COD_CARTAO_CREDITO))) order by l.DAT_LANCAMENTO,(case when (l.COD_PARCELA is not null) then cp.NOM_CATEGORIA when (l.COD_CARTAO_CREDITO is not null) then concat(c.NOM_CATEGORIA,concat(' (',concat(concat(concat(cc.NOM_BANDEIRA,' - '),substr(cc.NUM_CARTAO,-(4))),')'))) else c.NOM_CATEGORIA end);


# Replace placeholder table for VW_AGENDA_ATUAL with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_AGENDA_ATUAL;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_AGENDA_ATUAL
AS SELECT
   VW_AGENDAMENTOS.COD_USUARIO AS COD_USUARIO,
   VW_AGENDAMENTOS.DAT_PREVISTA AS DAT_PREVISTA,
   VW_AGENDAMENTOS.COD_AGENDAMENTO AS COD_AGENDAMENTO,NULL AS COD_PARCELA,NULL AS COD_CARTAO_CREDITO,
   VW_AGENDAMENTOS.COD_CATEGORIA AS COD_CATEGORIA,
   VW_AGENDAMENTOS.DES_CATEGORIA AS DES_CATEGORIA,
   VW_AGENDAMENTOS.VAL_PREVISTO AS VAL_PREVISTO,
   VW_AGENDAMENTOS.DAT_PAGAMENTO AS DAT_PAGAMENTO,
   VW_AGENDAMENTOS.VAL_PAGO AS VAL_PAGO
FROM VW_AGENDAMENTOS union all select VW_PARCELAS.COD_USUARIO AS COD_USUARIO,VW_PARCELAS.DAT_PREVISTA AS DAT_PREVISTA,NULL AS COD_AGENDAMENTO,VW_PARCELAS.COD_PARCELA AS COD_PARCELA,NULL AS COD_CARTAO_CREDITO,VW_PARCELAS.COD_CATEGORIA AS COD_CATEGORIA,VW_PARCELAS.DES_CATEGORIA AS DES_CATEGORIA,VW_PARCELAS.VAL_PREVISTO AS VAL_PREVISTO,VW_PARCELAS.DAT_PAGAMENTO AS DAT_PAGAMENTO,VW_PARCELAS.VAL_PAGO AS VAL_PAGO from VW_PARCELAS union all select VW_FATURAS_PREVISTAS_REALIZADAS.COD_USUARIO AS COD_USUARIO,VW_FATURAS_PREVISTAS_REALIZADAS.DAT_FATURA AS DAT_PREVISTA,NULL AS COD_AGENDAMENTO,NULL AS COD_PARCELA,VW_FATURAS_PREVISTAS_REALIZADAS.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,C.COD_CATEGORIA AS COD_CATEGORIA,concat(C.NOM_CATEGORIA,concat('(',concat(concat(concat(VW_FATURAS_PREVISTAS_REALIZADAS.NOM_BANDEIRA,' - '),substr(VW_FATURAS_PREVISTAS_REALIZADAS.NUM_CARTAO,-(4))),')'))) AS DES_CATEGORIA,VW_FATURAS_PREVISTAS_REALIZADAS.VAL_PARCELAS_PENDENTES AS VAL_PREVISTO,VW_FATURAS_PREVISTAS_REALIZADAS.DAT_REFERENCIA AS DAT_PAGAMENTO,VW_FATURAS_PREVISTAS_REALIZADAS.VAL_LANCAMENTO AS VAL_PAGO from (VW_FATURAS_PREVISTAS_REALIZADAS join CATEGORIA C) where ((C.COD_CATEGORIA = 76) and ((date_format(curdate(),'%Y%m') = date_format(VW_FATURAS_PREVISTAS_REALIZADAS.DAT_FATURA,'%Y%m')) or ((VW_FATURAS_PREVISTAS_REALIZADAS.DAT_FATURA < concat(convert(date_format(curdate(),'%Y-%m') using utf8),'-01')) and isnull(VW_FATURAS_PREVISTAS_REALIZADAS.DAT_REFERENCIA)))) order by DAT_PREVISTA,DES_CATEGORIA;


# Replace placeholder table for VW_MEDIA_CATEGORIA with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_MEDIA_CATEGORIA;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_MEDIA_CATEGORIA
AS SELECT
   L.COD_USUARIO AS COD_USUARIO,
   C.COD_CATEGORIA AS COD_CATEGORIA,
   C.NOM_CATEGORIA AS NOM_CATEGORIA,count(0) AS NUM_QTD,sum(L.VAL_LANCAMENTO) AS VAL_TOTAL,round((sum(L.VAL_LANCAMENTO) / count(0)),2) AS VAL_MEDIA
FROM (LANCAMENTO L join CATEGORIA C) where (C.COD_CATEGORIA = L.COD_CATEGORIA) group by L.COD_USUARIO,C.COD_CATEGORIA,C.NOM_CATEGORIA order by C.NOM_CATEGORIA;


# Replace placeholder table for VW_RESUMO_MESES with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_RESUMO_MESES;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_RESUMO_MESES
AS SELECT
   VW_AGENDAMENTOS_MESES.COD_USUARIO AS COD_USUARIO,'Agendamentos' AS DES_LANCAMENTOS,1 AS COD_TIPO,cast(date_format(VW_AGENDAMENTOS_MESES.DAT_PREVISTA,'%Y-%m-01') as date) AS DAT_COMPETENCIA,sum((case when isnull(VW_AGENDAMENTOS_MESES.VAL_PREVISTO) then 0 else VW_AGENDAMENTOS_MESES.VAL_PREVISTO end)) AS VAL_PREVISTO,sum((case when isnull(VW_AGENDAMENTOS_MESES.VAL_PAGO) then 0 else VW_AGENDAMENTOS_MESES.VAL_PAGO end)) AS VAL_PAGO
FROM VW_AGENDAMENTOS_MESES group by VW_AGENDAMENTOS_MESES.COD_USUARIO,cast(date_format(VW_AGENDAMENTOS_MESES.DAT_PREVISTA,'%Y-%m-01') as date) union all select VW_PARCELAS_MESES.COD_USUARIO AS COD_USUARIO,'Parcelas' AS DES_LANCAMENTOS,2 AS COD_TIPO,cast(date_format(VW_PARCELAS_MESES.DAT_PREVISTA,'%Y-%m-01') as date) AS DAT_COMPETENCIA,sum((case when isnull(VW_PARCELAS_MESES.VAL_PREVISTO) then 0 else VW_PARCELAS_MESES.VAL_PREVISTO end)) AS VAL_PREVISTO,sum((case when isnull(VW_PARCELAS_MESES.VAL_PAGO) then 0 else VW_PARCELAS_MESES.VAL_PAGO end)) AS VAL_PAGO from VW_PARCELAS_MESES group by VW_PARCELAS_MESES.COD_USUARIO,cast(date_format(VW_PARCELAS_MESES.DAT_PREVISTA,'%Y-%m-01') as date) union all select LANCAMENTO.COD_USUARIO AS COD_USUARIO,'Despesas Gerais' AS DES_LANCAMENTOS,3 AS COD_TIPO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date) AS DAT_COMPETENCIA,sum((case when isnull(LANCAMENTO.VAL_PREVISTO) then 0 else LANCAMENTO.VAL_PREVISTO end)) AS VAL_PREVISTO,sum((case when isnull(LANCAMENTO.VAL_LANCAMENTO) then 0 else LANCAMENTO.VAL_LANCAMENTO end)) AS VAL_PAGO from LANCAMENTO where (isnull(LANCAMENTO.COD_AGENDAMENTO) and isnull(LANCAMENTO.COD_PARCELA) and (LANCAMENTO.COD_CATEGORIA not in (72,50,51,67,68,69,70,71)) and (LANCAMENTO.DAT_REFERENCIA between cast(date_format((curdate() + interval -(3) month),'%Y-%m-01') as date) and cast(date_format(curdate(),'%Y-%m-01') as date))) group by LANCAMENTO.COD_USUARIO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date) union all select LANCAMENTO.COD_USUARIO AS COD_USUARIO,'Receitas' AS DES_LANCAMENTOS,4 AS COD_TIPO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date) AS DAT_COMPETENCIA,sum((case when isnull(LANCAMENTO.VAL_PREVISTO) then 0 else LANCAMENTO.VAL_PREVISTO end)) AS VAL_PREVISTO,sum((case when isnull(LANCAMENTO.VAL_LANCAMENTO) then 0 else LANCAMENTO.VAL_LANCAMENTO end)) AS VAL_PAGO from LANCAMENTO where (isnull(LANCAMENTO.COD_AGENDAMENTO) and isnull(LANCAMENTO.COD_PARCELA) and (LANCAMENTO.COD_CATEGORIA in (72,50,51,67,68,69,70,71)) and (LANCAMENTO.DAT_REFERENCIA between cast(date_format((curdate() + interval -(3) month),'%Y-%m-01') as date) and cast(date_format(curdate(),'%Y-%m-01') as date))) group by LANCAMENTO.COD_USUARIO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date);


# Replace placeholder table for VW_MEDIA_AGENDAMENTOS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_MEDIA_AGENDAMENTOS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_MEDIA_AGENDAMENTOS
AS SELECT
   L.COD_AGENDAMENTO AS COD_AGENDAMENTO,count(0) AS NUM_QTD,sum(L.VAL_LANCAMENTO) AS VAL_TOTAL,round((sum(L.VAL_LANCAMENTO) / count(0)),2) AS VAL_MEDIA
FROM LANCAMENTO L where ((L.COD_AGENDAMENTO is not null) and (L.DAT_REFERENCIA between cast(date_format((curdate() + interval -(3) month),'%Y-%m-01') as date) and cast(date_format(curdate(),'%Y-%m-01') as date))) group by L.COD_AGENDAMENTO;


# Replace placeholder table for VW_FATURAS_DATAS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_FATURAS_DATAS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_FATURAS_DATAS
AS SELECT
   CARTAO_CREDITO.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,
   CARTAO_CREDITO.COD_USUARIO AS COD_USUARIO,str_to_date(concat(convert(date_format((curdate() + interval -(1) month),'%Y-%m-') using utf8),concat((case when (CARTAO_CREDITO.NUM_DIA_VENCIMENTO < 10) then '0' else '' end),CARTAO_CREDITO.NUM_DIA_VENCIMENTO)),'%Y-%m-%d') AS DAT_FATURA
FROM CARTAO_CREDITO union all select CARTAO_CREDITO.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,CARTAO_CREDITO.COD_USUARIO AS COD_USUARIO,str_to_date(concat(convert(date_format(curdate(),'%Y-%m-') using utf8),concat((case when (CARTAO_CREDITO.NUM_DIA_VENCIMENTO < 10) then '0' else '' end),CARTAO_CREDITO.NUM_DIA_VENCIMENTO)),'%Y-%m-%d') AS DAT_FATURA from CARTAO_CREDITO union all select CARTAO_CREDITO.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,CARTAO_CREDITO.COD_USUARIO AS COD_USUARIO,str_to_date(concat(convert(date_format((curdate() + interval 1 month),'%Y-%m-') using utf8),concat((case when (CARTAO_CREDITO.NUM_DIA_VENCIMENTO < 10) then '0' else '' end),CARTAO_CREDITO.NUM_DIA_VENCIMENTO)),'%Y-%m-%d') AS DAT_FATURA from CARTAO_CREDITO;


# Replace placeholder table for VW_DESPESAS_RECEITAS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_DESPESAS_RECEITAS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_DESPESAS_RECEITAS
AS SELECT
   LANCAMENTO.COD_USUARIO AS COD_USUARIO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date) AS DAT_COMPETENCIA,round(sum(LANCAMENTO.VAL_PREVISTO),2) AS VAL_DESPESA_PREVISTA,round(sum(LANCAMENTO.VAL_LANCAMENTO),2) AS VAL_DESPESA_PAGA,0 AS VAL_RECEITA_PREVISTA,0 AS VAL_RECEITA_PAGA
FROM LANCAMENTO where ((LANCAMENTO.COD_CATEGORIA not in (72,50,51,67,68,69,70,71)) and (LANCAMENTO.DAT_REFERENCIA between cast(date_format((curdate() + interval -(12) month),'%Y-%m-01') as date) and cast(date_format(curdate(),'%Y-%m-01') as date))) group by LANCAMENTO.COD_USUARIO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date) union all select LANCAMENTO.COD_USUARIO AS COD_USUARIO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date) AS DAT_COMPETENCIA,0 AS VAL_DESPESA_PREVISTA,0 AS VAL_DESPESA_PAGA,round(sum(LANCAMENTO.VAL_PREVISTO),2) AS VAL_RECEITA_PREVISTA,round(sum(LANCAMENTO.VAL_LANCAMENTO),2) AS VAL_RECEITA_PAGA from LANCAMENTO where ((LANCAMENTO.COD_CATEGORIA in (72,50,51,67,68,69,70,71)) and (LANCAMENTO.DAT_REFERENCIA between cast(date_format((curdate() + interval -(12) month),'%Y-%m-01') as date) and cast(date_format(curdate(),'%Y-%m-01') as date))) group by LANCAMENTO.COD_USUARIO,cast(date_format(LANCAMENTO.DAT_REFERENCIA,'%Y-%m-01') as date);


# Replace placeholder table for VW_FATURAS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_FATURAS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_FATURAS
AS SELECT
   L.COD_USUARIO AS COD_USUARIO,
   L.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,
   CC.NOM_BANDEIRA AS NOM_BANDEIRA,
   CC.NUM_CARTAO AS NUM_CARTAO,
   L.DAT_FATURA AS DAT_FATURA,
   L.DAT_REFERENCIA AS DAT_REFERENCIA,
   L.VAL_PREVISTO AS VAL_PREVISTO,
   L.VAL_LANCAMENTO AS VAL_LANCAMENTO,count(PA.COD_PARCELA) AS QTD_PARCELAS,sum(PA.VAL_PARCELA) AS VAL_PARCELAS
FROM ((((LANCAMENTO L join CATEGORIA CA on((CA.COD_CATEGORIA = L.COD_CATEGORIA))) join CARTAO_CREDITO CC on((CC.COD_CARTAO_CREDITO = L.COD_CARTAO_CREDITO))) join LANCAMENTO_PARCELA LP on((LP.COD_LANCAMENTO = L.COD_LANCAMENTO))) join PARCELA PA on((PA.COD_PARCELA = LP.COD_PARCELA))) where (L.COD_CATEGORIA = 76) group by L.COD_USUARIO,L.COD_CARTAO_CREDITO,CC.NOM_BANDEIRA,CC.NUM_CARTAO,L.DAT_FATURA,L.DAT_REFERENCIA,L.VAL_PREVISTO,L.VAL_LANCAMENTO;


# Replace placeholder table for VW_LANCAMENTOS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_LANCAMENTOS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_LANCAMENTOS
AS SELECT
   VW_AGENDAMENTOS.COD_USUARIO AS COD_USUARIO,'Agendamentos' AS DES_LANCAMENTOS,1 AS COD_TIPO,sum((case when isnull(VW_AGENDAMENTOS.VAL_PREVISTO) then 0 else VW_AGENDAMENTOS.VAL_PREVISTO end)) AS VAL_PREVISTO,sum((case when isnull(VW_AGENDAMENTOS.VAL_PAGO) then 0 else VW_AGENDAMENTOS.VAL_PAGO end)) AS VAL_PAGO
FROM VW_AGENDAMENTOS where (date_format(curdate(),'%Y%m') = date_format(VW_AGENDAMENTOS.DAT_PREVISTA,'%Y%m')) group by VW_AGENDAMENTOS.COD_USUARIO union all select VW_PARCELAS.COD_USUARIO AS COD_USUARIO,'Parcelas' AS DES_LANCAMENTOS,2 AS COD_TIPO,sum((case when isnull(VW_PARCELAS.VAL_PREVISTO) then 0 else VW_PARCELAS.VAL_PREVISTO end)) AS VAL_PREVISTO,sum(VW_PARCELAS.VAL_PAGO) AS VAL_PAGO from VW_PARCELAS where (date_format(curdate(),'%Y%m') = date_format(VW_PARCELAS.DAT_PREVISTA,'%Y%m')) group by VW_PARCELAS.COD_USUARIO union all select LANCAMENTO.COD_USUARIO AS COD_USUARIO,'Despesas Gerais' AS DES_LANCAMENTOS,3 AS COD_TIPO,sum((case when isnull(LANCAMENTO.VAL_PREVISTO) then 0 else LANCAMENTO.VAL_PREVISTO end)) AS VAL_PREVISTO,sum(LANCAMENTO.VAL_LANCAMENTO) AS VAL_PAGO from LANCAMENTO where (isnull(LANCAMENTO.COD_AGENDAMENTO) and isnull(LANCAMENTO.COD_PARCELA) and (LANCAMENTO.COD_CATEGORIA not in (50,51,67,68,69,70,71,72,76)) and (date_format(curdate(),'%Y%m') = date_format(LANCAMENTO.DAT_REFERENCIA,'%Y%m'))) group by LANCAMENTO.COD_USUARIO union all select LANCAMENTO.COD_USUARIO AS COD_USUARIO,'Receitas' AS DES_LANCAMENTOS,4 AS COD_TIPO,sum((case when isnull(LANCAMENTO.VAL_PREVISTO) then 0 else LANCAMENTO.VAL_PREVISTO end)) AS VAL_PREVISTO,sum(LANCAMENTO.VAL_LANCAMENTO) AS VAL_PAGO from LANCAMENTO where (isnull(LANCAMENTO.COD_AGENDAMENTO) and isnull(LANCAMENTO.COD_PARCELA) and (LANCAMENTO.COD_CATEGORIA in (72,50,51,67,68,69,70,71)) and (date_format(curdate(),'%Y%m') = date_format(LANCAMENTO.DAT_REFERENCIA,'%Y%m'))) group by LANCAMENTO.COD_USUARIO union all select LANCAMENTO.COD_USUARIO AS COD_USUARIO,'Faturas' AS DES_LANCAMENTOS,5 AS COD_TIPO,sum((case when isnull(LANCAMENTO.VAL_PREVISTO) then 0 else LANCAMENTO.VAL_PREVISTO end)) AS VAL_PREVISTO,sum(LANCAMENTO.VAL_LANCAMENTO) AS VAL_PAGO from LANCAMENTO where (isnull(LANCAMENTO.COD_AGENDAMENTO) and isnull(LANCAMENTO.COD_PARCELA) and (LANCAMENTO.COD_CARTAO_CREDITO is not null) and (LANCAMENTO.COD_CATEGORIA = 76) and (date_format(curdate(),'%Y%m') = date_format(LANCAMENTO.DAT_REFERENCIA,'%Y%m'))) group by LANCAMENTO.COD_USUARIO;


# Replace placeholder table for VW_FATURAS_PREVISTAS_REALIZADAS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_FATURAS_PREVISTAS_REALIZADAS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_FATURAS_PREVISTAS_REALIZADAS
AS SELECT
   DATAS.COD_USUARIO AS COD_USUARIO,
   DATAS.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,
   CC.NOM_BANDEIRA AS NOM_BANDEIRA,
   CC.NUM_CARTAO AS NUM_CARTAO,
   DATAS.DAT_FATURA AS DAT_FATURA,
   FATURA.DAT_REFERENCIA AS DAT_REFERENCIA,
   FATURA.VAL_LANCAMENTO AS VAL_LANCAMENTO,round(sum((case when isnull(PA.VAL_PARCELA) then 0 else PA.VAL_PARCELA end)),2) AS VAL_PARCELAS_PENDENTES,count(PA.COD_PARCELA) AS QTD_PARCELAS_PENDENTES
FROM (((VW_FATURAS_DATAS DATAS join CARTAO_CREDITO CC on((CC.COD_CARTAO_CREDITO = DATAS.COD_CARTAO_CREDITO))) left join VW_PARCELAS_SEM_FATURA PA on(((PA.COD_CARTAO_CREDITO = DATAS.COD_CARTAO_CREDITO) and (PA.DAT_REFERENCIA = DATAS.DAT_FATURA)))) left join VW_FATURAS FATURA on(((FATURA.COD_CARTAO_CREDITO = DATAS.COD_CARTAO_CREDITO) and (FATURA.DAT_FATURA = DATAS.DAT_FATURA)))) group by DATAS.COD_USUARIO,DATAS.COD_CARTAO_CREDITO,CC.NOM_BANDEIRA,CC.NUM_CARTAO,DATAS.DAT_FATURA,FATURA.DAT_REFERENCIA,FATURA.VAL_LANCAMENTO order by DATAS.DAT_FATURA,DATAS.COD_CARTAO_CREDITO;


# Replace placeholder table for VW_ULTIMAS_ATIVIDADES with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_ULTIMAS_ATIVIDADES;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_ULTIMAS_ATIVIDADES
AS SELECT
   l.COD_USUARIO AS COD_USUARIO,date_format(l.DAT_LANCAMENTO,'%Y%m') AS NUM_COMPETENCIA,(case when (l.COD_AGENDAMENTO is not null) then concat(c.NOM_CATEGORIA,concat(concat(' (',a.NOM_AGENDAMENTO),')')) when (l.COD_PARCELA is not null) then concat(concat(convert(concat(concat('Parcela N ',p.NUM_PARCELA),' (') using latin2),cp.NOM_CATEGORIA),')') when ((l.COD_CARTAO_CREDITO is not null) and (l.COD_CATEGORIA = 76)) then concat(c.NOM_CATEGORIA,concat('(',concat(concat(concat(cc.NOM_BANDEIRA,' - '),substr(cc.NUM_CARTAO,-(4))),')'))) else c.NOM_CATEGORIA end) AS DES_CATEGORIA,(case when ((l.COD_CARTAO_CREDITO is not null) and (l.COD_CATEGORIA <> 76)) then l.VAL_PREVISTO else l.VAL_LANCAMENTO end) AS VAL_PAGO,
   l.DAT_LANCAMENTO AS DAT_LANCAMENTO,timestampdiff(DAY,l.DAT_LANCAMENTO,now()) AS NUM_DIAS,timestampdiff(HOUR,l.DAT_LANCAMENTO,now()) AS NUM_HORAS,timestampdiff(MINUTE,l.DAT_LANCAMENTO,now()) AS NUM_MINUTOS
FROM ((((((LANCAMENTO l join CATEGORIA c on((c.COD_CATEGORIA = l.COD_CATEGORIA))) left join AGENDAMENTO a on((a.COD_AGENDAMENTO = l.COD_AGENDAMENTO))) left join CARTAO_CREDITO cc on((cc.COD_CARTAO_CREDITO = l.COD_CARTAO_CREDITO))) left join PARCELA p on((p.COD_PARCELA = l.COD_PARCELA))) left join LANCAMENTO lp on((lp.COD_LANCAMENTO = p.COD_LANCAMENTO))) left join CATEGORIA cp on((cp.COD_CATEGORIA = lp.COD_CATEGORIA))) order by date_format(l.DAT_LANCAMENTO,'%Y%m'),l.DAT_LANCAMENTO,(case when (l.COD_AGENDAMENTO is not null) then concat(c.NOM_CATEGORIA,concat(concat(' (',a.NOM_AGENDAMENTO),')')) when (l.COD_PARCELA is not null) then concat(concat(convert(concat(concat('Parcela N ',p.NUM_PARCELA),' (') using latin2),cp.NOM_CATEGORIA),')') when ((l.COD_CARTAO_CREDITO is not null) and (l.COD_CATEGORIA = 76)) then concat(c.NOM_CATEGORIA,concat('(',concat(concat(concat(cc.NOM_BANDEIRA,' - '),substr(cc.NUM_CARTAO,-(4))),')'))) else c.NOM_CATEGORIA end);


# Replace placeholder table for VW_RELATORIO_DINAMICO with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_RELATORIO_DINAMICO;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_RELATORIO_DINAMICO
AS SELECT
   distinct l.COD_USUARIO AS COD_USUARIO,
   l.COD_LANCAMENTO AS COD_LANCAMENTO,
   p.COD_LANCAMENTO AS COD_LANCAMENTO_PARCELA,
   l.COD_AGENDAMENTO AS COD_AGENDAMENTO,(case when (l.COD_AGENDAMENTO is not null) then 1 when (l.COD_PARCELA is not null) then 2 when (l.COD_CATEGORIA not in (72,50,51,67,68,69,70,71,76)) then 3 when (l.COD_CATEGORIA in (72,50,51,67,68,69,70,71)) then 4 when (l.COD_CATEGORIA = 76) then 5 else 3 end) AS COD_TIPO,(case when (lp.COD_PARCELA is not null) then cp.COD_CATEGORIA else c.COD_CATEGORIA end) AS COD_CATEGORIA,(case when (lp.COD_PARCELA is not null) then cp.NOM_CATEGORIA else c.NOM_CATEGORIA end) AS NOM_CATEGORIA,
   c_pai.COD_CATEGORIA AS COD_CATEGORIA_PAI,
   c_pai.NOM_CATEGORIA AS NOM_CATEGORIA_PAI,
   p.NUM_PARCELA AS NUM_PARCELA,
   a.NOM_AGENDAMENTO AS NOM_AGENDAMENTO,
   l.DAT_LANCAMENTO AS DAT_LANCAMENTO,
   l.DAT_REFERENCIA AS DAT_REFERENCIA,(case when isnull((l.COD_CATEGORIA = 71)) then l.VAL_PREVISTO else l.VAL_LANCAMENTO end) AS VAL_PREVISTO,
   l.VAL_LANCAMENTO AS VAL_PAGO
FROM ((((((LANCAMENTO l join CATEGORIA c on((c.COD_CATEGORIA = l.COD_CATEGORIA))) left join PARCELA p on((p.COD_PARCELA = l.COD_PARCELA))) left join LANCAMENTO lp on((lp.COD_LANCAMENTO = p.COD_LANCAMENTO))) left join CATEGORIA cp on((cp.COD_CATEGORIA = lp.COD_CATEGORIA))) left join CATEGORIA c_pai on((((lp.COD_PARCELA is not null) and (c_pai.COD_CATEGORIA = cp.COD_CATEGORIA_PAI)) or (c_pai.COD_CATEGORIA = c.COD_CATEGORIA_PAI)))) left join AGENDAMENTO a on((a.COD_AGENDAMENTO = l.COD_AGENDAMENTO))) where (l.DAT_REFERENCIA >= cast(date_format((curdate() + interval -(5) month),'%Y-%m-01') as date)) order by l.DAT_REFERENCIA,(case when (lp.COD_PARCELA is not null) then cp.NOM_CATEGORIA else c.NOM_CATEGORIA end);


# Replace placeholder table for VW_PARCELAS_MESES with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_PARCELAS_MESES;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_PARCELAS_MESES
AS SELECT
   LPA.COD_USUARIO AS COD_USUARIO,
   P.DAT_REFERENCIA AS DAT_PREVISTA,
   P.COD_PARCELA AS COD_PARCELA,
   LPA.DES_LANCAMENTO AS DES_LANCAMENTO,71 AS COD_CATEGORIA,concat(concat(convert(concat(concat('Parcela N-',P.NUM_PARCELA),' (') using latin2),C.NOM_CATEGORIA),')') AS DES_CATEGORIA,
   P.VAL_PARCELA AS VAL_PREVISTO,
   LPG.DAT_REFERENCIA AS DAT_PAGAMENTO,
   LPG.VAL_LANCAMENTO AS VAL_PAGO,timestampdiff(DAY,now(),P.DAT_REFERENCIA) AS DIAS
FROM (((PARCELA P join LANCAMENTO LPA on((LPA.COD_LANCAMENTO = P.COD_LANCAMENTO))) join CATEGORIA C on((C.COD_CATEGORIA = LPA.COD_CATEGORIA))) left join LANCAMENTO LPG on((LPG.COD_PARCELA = P.COD_PARCELA))) where ((P.DAT_REFERENCIA between cast(date_format((curdate() + interval -(3) month),'%Y-%m-01') as date) and cast(date_format(curdate(),'%Y-%m-01') as date)) or ((P.DAT_REFERENCIA < concat(convert(date_format(curdate(),'%Y-%m') using utf8),'-01')) and isnull(LPG.DAT_REFERENCIA)));


# Replace placeholder table for VW_PARCELAS_SEM_FATURA with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_PARCELAS_SEM_FATURA;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_PARCELAS_SEM_FATURA
AS SELECT
   L.COD_USUARIO AS COD_USUARIO,
   L.COD_CARTAO_CREDITO AS COD_CARTAO_CREDITO,
   PA.COD_PARCELA AS COD_PARCELA,
   CC.NOM_BANDEIRA AS NOM_BANDEIRA,
   CC.NUM_CARTAO AS NUM_CARTAO,
   CA.NOM_CATEGORIA AS NOM_CATEGORIA,
   PA.DAT_REFERENCIA AS DAT_REFERENCIA,
   PA.VAL_PARCELA AS VAL_PARCELA
FROM ((((PARCELA PA join LANCAMENTO L on((L.COD_LANCAMENTO = PA.COD_LANCAMENTO))) join CATEGORIA CA on((CA.COD_CATEGORIA = L.COD_CATEGORIA))) join CARTAO_CREDITO CC on((CC.COD_CARTAO_CREDITO = L.COD_CARTAO_CREDITO))) left join LANCAMENTO_PARCELA LP on((LP.COD_PARCELA = PA.COD_PARCELA))) where isnull(LP.COD_PARCELA);


# Replace placeholder table for VW_AGENDAMENTOS with correct view syntax
# ------------------------------------------------------------

DROP TABLE VW_AGENDAMENTOS;

CREATE ALGORITHM=UNDEFINED DEFINER=quaemoco@localhost SQL SECURITY DEFINER VIEW VW_AGENDAMENTOS
AS SELECT
   A.COD_USUARIO AS COD_USUARIO,(A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(curdate(),'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month) AS DAT_PREVISTA,
   A.COD_AGENDAMENTO AS COD_AGENDAMENTO,
   A.NOM_AGENDAMENTO AS NOM_AGENDAMENTO,
   C.COD_CATEGORIA AS COD_CATEGORIA,concat(C.NOM_CATEGORIA,concat(concat(' (',A.NOM_AGENDAMENTO),')')) AS DES_CATEGORIA,(case when isnull(VW.VAL_MEDIA) then 0.00 else VW.VAL_MEDIA end) AS VAL_PREVISTO,
   P.NOM_PERIODO AS NOM_PERIODO,
   L.DAT_REFERENCIA AS DAT_PAGAMENTO,
   L.VAL_LANCAMENTO AS VAL_PAGO,timestampdiff(DAY,now(),(A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(curdate(),'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month)) AS DIAS
FROM ((((AGENDAMENTO A join CATEGORIA C on((C.COD_CATEGORIA = A.COD_CATEGORIA))) join PERIODO P on((P.NUM_PERIODO = A.NUM_PERIODO))) left join LANCAMENTO L on(((L.COD_AGENDAMENTO = A.COD_AGENDAMENTO) and (date_format(L.DAT_REFERENCIA,'%Y%m') = date_format(curdate(),'%Y%m')) and (L.COD_LANCAMENTO = (select max(L2.COD_LANCAMENTO) from LANCAMENTO L2 where ((L2.COD_AGENDAMENTO = A.COD_AGENDAMENTO) and (date_format(L2.DAT_REFERENCIA,'%Y%m') = date_format(curdate(),'%Y%m')))))))) left join VW_MEDIA_AGENDAMENTOS VW on((VW.COD_AGENDAMENTO = A.COD_AGENDAMENTO))) where ((A.IND_STATUS = 1) and (date_format(curdate(),'%Y%m') = date_format((A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(curdate(),'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month),'%Y%m'))) order by (A.DAT_INICIO + interval (P.NUM_PERIODO * round((period_diff(date_format(curdate(),'%Y%m'),date_format(A.DAT_INICIO,'%Y%m')) / P.NUM_PERIODO),0)) month),concat(C.NOM_CATEGORIA,concat(concat(' (',A.NOM_AGENDAMENTO),')'));

/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
